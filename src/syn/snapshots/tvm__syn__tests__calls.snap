---
source: src/syn/tests.rs
expression: "parse!(r#\"\n    f();\n    f(0);\n    f(0,);\n    f(0, 1, 2);\n    f(0, 1, 2,);\n    f(a: 0);\n    f(a: 0,);\n    f(a: 0, b: 1, c: 2);\n    f(a: 0, b: 1, c: 2,);\n  \"#)"
---
Ast {
    decls: [],
    top_level: Block {
        body: [
            Call {
                callee: UseVar {
                    name: Ident("f"),
                },
                args: [],
            },
            Call {
                callee: UseVar {
                    name: Ident("f"),
                },
                args: [
                    Arg(
                        Int(
                            0,
                        ),
                    ),
                ],
            },
            Call {
                callee: UseVar {
                    name: Ident("f"),
                },
                args: [
                    Arg(
                        Int(
                            0,
                        ),
                    ),
                ],
            },
            Call {
                callee: UseVar {
                    name: Ident("f"),
                },
                args: [
                    Arg(
                        Int(
                            0,
                        ),
                    ),
                    Arg(
                        Int(
                            1,
                        ),
                    ),
                    Arg(
                        Int(
                            2,
                        ),
                    ),
                ],
            },
            Call {
                callee: UseVar {
                    name: Ident("f"),
                },
                args: [
                    Arg(
                        Int(
                            0,
                        ),
                    ),
                    Arg(
                        Int(
                            1,
                        ),
                    ),
                    Arg(
                        Int(
                            2,
                        ),
                    ),
                ],
            },
            Call {
                callee: UseVar {
                    name: Ident("f"),
                },
                args: [
                    Arg(
                        Ident("a"),
                        Int(
                            0,
                        ),
                    ),
                ],
            },
            Call {
                callee: UseVar {
                    name: Ident("f"),
                },
                args: [
                    Arg(
                        Ident("a"),
                        Int(
                            0,
                        ),
                    ),
                ],
            },
            Call {
                callee: UseVar {
                    name: Ident("f"),
                },
                args: [
                    Arg(
                        Ident("a"),
                        Int(
                            0,
                        ),
                    ),
                    Arg(
                        Ident("b"),
                        Int(
                            1,
                        ),
                    ),
                    Arg(
                        Ident("c"),
                        Int(
                            2,
                        ),
                    ),
                ],
            },
            Call {
                callee: UseVar {
                    name: Ident("f"),
                },
                args: [
                    Arg(
                        Ident("a"),
                        Int(
                            0,
                        ),
                    ),
                    Arg(
                        Ident("b"),
                        Int(
                            1,
                        ),
                    ),
                    Arg(
                        Ident("c"),
                        Int(
                            2,
                        ),
                    ),
                ],
            },
        ],
        tail: None,
    },
}
