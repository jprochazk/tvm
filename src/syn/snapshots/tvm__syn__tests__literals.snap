---
source: src/syn/tests.rs
expression: "parse!(r#\"\n    let v: int = 1;\n    let v: int? = none;\n    let v: num = 1.0;\n    let v: bool = true;\n    let v: str = \"yo\";\n    let v: [int] = [1, 2, 3];\n    let v: {str} = {\"a\", \"b\", \"c\"};\n    let v: {str -> int} = {\"a\": 0, \"b\": 1};\n  \"#)"
---
SyntaxTree {
    top_level: Block {
        body: [
            Let(
                Ident("v"),
                Some(
                    Named(
                        Ident("int"),
                    ),
                ),
                Literal(
                    Int(1),
                ),
            ),
            Let(
                Ident("v"),
                Some(
                    Opt(
                        Named(
                            Ident("int"),
                        ),
                    ),
                ),
                Literal(
                    None,
                ),
            ),
            Let(
                Ident("v"),
                Some(
                    Named(
                        Ident("num"),
                    ),
                ),
                Literal(
                    Float(1.0),
                ),
            ),
            Let(
                Ident("v"),
                Some(
                    Named(
                        Ident("bool"),
                    ),
                ),
                Literal(
                    Bool(true),
                ),
            ),
            Let(
                Ident("v"),
                Some(
                    Named(
                        Ident("str"),
                    ),
                ),
                Literal(
                    String("\"yo\""),
                ),
            ),
            Let(
                Ident("v"),
                Some(
                    Array(
                        Named(
                            Ident("int"),
                        ),
                    ),
                ),
                Literal(
                    Array(
                        [
                            Literal(
                                Int(1),
                            ),
                            Literal(
                                Int(2),
                            ),
                            Literal(
                                Int(3),
                            ),
                        ],
                    ),
                ),
            ),
            Let(
                Ident("v"),
                Some(
                    Set(
                        Named(
                            Ident("str"),
                        ),
                    ),
                ),
                Literal(
                    Set(
                        [
                            Literal(
                                String("\"a\""),
                            ),
                            Literal(
                                String("\"b\""),
                            ),
                            Literal(
                                String("\"c\""),
                            ),
                        ],
                    ),
                ),
            ),
            Let(
                Ident("v"),
                Some(
                    Map(
                        Named(
                            Ident("str"),
                        ),
                        Named(
                            Ident("int"),
                        ),
                    ),
                ),
                Literal(
                    Map(
                        [
                            (
                                Literal(
                                    String("\"a\""),
                                ),
                                Literal(
                                    Int(0),
                                ),
                            ),
                            (
                                Literal(
                                    String("\"b\""),
                                ),
                                Literal(
                                    Int(1),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
        ],
        tail: None,
    },
}
