---
source: src/ty/tests.rs
expression: "check!(r#\"\n        let v = 0;\n        let v: int = 0;\n    \"#)"
---
Hir {
    defs: Defs {
        next_id: DefId(
            4,
        ),
        id_map: {
            "bool": DefId(
                2,
            ),
            "int": DefId(
                0,
            ),
            "num": DefId(
                1,
            ),
            "str": DefId(
                3,
            ),
        },
        array: [
            TypeDef {
                id: DefId(
                    0,
                ),
                name: Ident("int"),
                fields: Extern,
            },
            TypeDef {
                id: DefId(
                    1,
                ),
                name: Ident("num"),
                fields: Extern,
            },
            TypeDef {
                id: DefId(
                    2,
                ),
                name: Ident("bool"),
                fields: Extern,
            },
            TypeDef {
                id: DefId(
                    3,
                ),
                name: Ident("str"),
                fields: Extern,
            },
        ],
    },
    fns: Fns {
        next_id: FnId(
            0,
        ),
        id_map: {},
        array: [],
    },
    top_level: Block {
        body: [
            Let {
                name: Ident("v"),
                ty: None,
                init: Int(
                    0,
                ),
            },
            Let {
                name: Ident("v"),
                ty: Some(
                    Named(
                        Named {
                            name: Ident("int"),
                        },
                    ),
                ),
                init: Int(
                    0,
                ),
            },
        ],
        tail: None,
    },
}
