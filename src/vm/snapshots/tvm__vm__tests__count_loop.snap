---
source: src/vm/tests.rs
expression: "run!(r#\"\n        let i = 0;\n        loop {\n            if i >= 10 { break }\n            i += 1;\n        }\n        i\n    \"#)"
---
## Module

function "main" {
  registers: 4 (0 params)
  literals: []
  bytecode: (10 ops) [
    smi 0, r1             // let i = 0;
    smi 10, r3            // if i >= 10 { break }
    cge <i64> r1, r3, r2  // 
    jmpf r2, +2           // 
    jmp +4                // 
    smi 1, r2             // i += 1;
    add <i64> r1, r2, r1  // 
    jmp -6                // }
    mov r1, r0            // i
    ret                   //   
  ]
}


## Output

I64(10)

## Events

smi 0, r1                [_, _, _, _] -> [_, 0i, _, _]
smi 10, r3               [_, 0i, _, _] -> [_, 0i, _, 10i]
cge <i64> r1, r3, r2     [_, 0i, _, 10i] -> [_, 0i, false, 10i]
jmpf r2, +2              [_, 0i, false, 10i] -> [_, 0i, false, 10i]
smi 1, r2                [_, 0i, false, 10i] -> [_, 0i, 1i, 10i]
add <i64> r1, r2, r1     [_, 0i, 1i, 10i] -> [_, 1i, 1i, 10i]
jmp -6                   [_, 1i, 1i, 10i] -> [_, 1i, 1i, 10i]
smi 10, r3               [_, 1i, 1i, 10i] -> [_, 1i, 1i, 10i]
cge <i64> r1, r3, r2     [_, 1i, 1i, 10i] -> [_, 1i, false, 10i]
jmpf r2, +2              [_, 1i, false, 10i] -> [_, 1i, false, 10i]
smi 1, r2                [_, 1i, false, 10i] -> [_, 1i, 1i, 10i]
add <i64> r1, r2, r1     [_, 1i, 1i, 10i] -> [_, 2i, 1i, 10i]
jmp -6                   [_, 2i, 1i, 10i] -> [_, 2i, 1i, 10i]
smi 10, r3               [_, 2i, 1i, 10i] -> [_, 2i, 1i, 10i]
cge <i64> r1, r3, r2     [_, 2i, 1i, 10i] -> [_, 2i, false, 10i]
jmpf r2, +2              [_, 2i, false, 10i] -> [_, 2i, false, 10i]
smi 1, r2                [_, 2i, false, 10i] -> [_, 2i, 1i, 10i]
add <i64> r1, r2, r1     [_, 2i, 1i, 10i] -> [_, 3i, 1i, 10i]
jmp -6                   [_, 3i, 1i, 10i] -> [_, 3i, 1i, 10i]
smi 10, r3               [_, 3i, 1i, 10i] -> [_, 3i, 1i, 10i]
cge <i64> r1, r3, r2     [_, 3i, 1i, 10i] -> [_, 3i, false, 10i]
jmpf r2, +2              [_, 3i, false, 10i] -> [_, 3i, false, 10i]
smi 1, r2                [_, 3i, false, 10i] -> [_, 3i, 1i, 10i]
add <i64> r1, r2, r1     [_, 3i, 1i, 10i] -> [_, 4i, 1i, 10i]
jmp -6                   [_, 4i, 1i, 10i] -> [_, 4i, 1i, 10i]
smi 10, r3               [_, 4i, 1i, 10i] -> [_, 4i, 1i, 10i]
cge <i64> r1, r3, r2     [_, 4i, 1i, 10i] -> [_, 4i, false, 10i]
jmpf r2, +2              [_, 4i, false, 10i] -> [_, 4i, false, 10i]
smi 1, r2                [_, 4i, false, 10i] -> [_, 4i, 1i, 10i]
add <i64> r1, r2, r1     [_, 4i, 1i, 10i] -> [_, 5i, 1i, 10i]
jmp -6                   [_, 5i, 1i, 10i] -> [_, 5i, 1i, 10i]
smi 10, r3               [_, 5i, 1i, 10i] -> [_, 5i, 1i, 10i]
cge <i64> r1, r3, r2     [_, 5i, 1i, 10i] -> [_, 5i, false, 10i]
jmpf r2, +2              [_, 5i, false, 10i] -> [_, 5i, false, 10i]
smi 1, r2                [_, 5i, false, 10i] -> [_, 5i, 1i, 10i]
add <i64> r1, r2, r1     [_, 5i, 1i, 10i] -> [_, 6i, 1i, 10i]
jmp -6                   [_, 6i, 1i, 10i] -> [_, 6i, 1i, 10i]
smi 10, r3               [_, 6i, 1i, 10i] -> [_, 6i, 1i, 10i]
cge <i64> r1, r3, r2     [_, 6i, 1i, 10i] -> [_, 6i, false, 10i]
jmpf r2, +2              [_, 6i, false, 10i] -> [_, 6i, false, 10i]
smi 1, r2                [_, 6i, false, 10i] -> [_, 6i, 1i, 10i]
add <i64> r1, r2, r1     [_, 6i, 1i, 10i] -> [_, 7i, 1i, 10i]
jmp -6                   [_, 7i, 1i, 10i] -> [_, 7i, 1i, 10i]
smi 10, r3               [_, 7i, 1i, 10i] -> [_, 7i, 1i, 10i]
cge <i64> r1, r3, r2     [_, 7i, 1i, 10i] -> [_, 7i, false, 10i]
jmpf r2, +2              [_, 7i, false, 10i] -> [_, 7i, false, 10i]
smi 1, r2                [_, 7i, false, 10i] -> [_, 7i, 1i, 10i]
add <i64> r1, r2, r1     [_, 7i, 1i, 10i] -> [_, 8i, 1i, 10i]
jmp -6                   [_, 8i, 1i, 10i] -> [_, 8i, 1i, 10i]
smi 10, r3               [_, 8i, 1i, 10i] -> [_, 8i, 1i, 10i]
cge <i64> r1, r3, r2     [_, 8i, 1i, 10i] -> [_, 8i, false, 10i]
jmpf r2, +2              [_, 8i, false, 10i] -> [_, 8i, false, 10i]
smi 1, r2                [_, 8i, false, 10i] -> [_, 8i, 1i, 10i]
add <i64> r1, r2, r1     [_, 8i, 1i, 10i] -> [_, 9i, 1i, 10i]
jmp -6                   [_, 9i, 1i, 10i] -> [_, 9i, 1i, 10i]
smi 10, r3               [_, 9i, 1i, 10i] -> [_, 9i, 1i, 10i]
cge <i64> r1, r3, r2     [_, 9i, 1i, 10i] -> [_, 9i, false, 10i]
jmpf r2, +2              [_, 9i, false, 10i] -> [_, 9i, false, 10i]
smi 1, r2                [_, 9i, false, 10i] -> [_, 9i, 1i, 10i]
add <i64> r1, r2, r1     [_, 9i, 1i, 10i] -> [_, 10i, 1i, 10i]
jmp -6                   [_, 10i, 1i, 10i] -> [_, 10i, 1i, 10i]
smi 10, r3               [_, 10i, 1i, 10i] -> [_, 10i, 1i, 10i]
cge <i64> r1, r3, r2     [_, 10i, 1i, 10i] -> [_, 10i, true, 10i]
jmpf r2, +2              [_, 10i, true, 10i] -> [_, 10i, true, 10i]
jmp +4                   [_, 10i, true, 10i] -> [_, 10i, true, 10i]
mov r1, r0               [_, 10i, true, 10i] -> [10i, 10i, true, 10i]
ret                      [10i, 10i, true, 10i]

